// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Onto.DAL.Data;

#nullable disable

namespace Onto.DAL.Migrations
{
    [DbContext(typeof(OntologyContext))]
    [Migration("20230513193056_ChangedParentIDToNull")]
    partial class ChangedParentIDToNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Onto.DAL.Entities.OntologyConcept", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Uri");

                    b.HasIndex("ParentId");

                    b.ToTable("OntologyConcepts");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyProperty", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uri");

                    b.ToTable("OntologyProperties");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyPropertyDomain", b =>
                {
                    b.Property<string>("ConceptDomainUri")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropertyUri")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ConceptDomainUri", "PropertyUri");

                    b.HasIndex("PropertyUri");

                    b.ToTable("OntologyConceptProperties");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyPropertyRange", b =>
                {
                    b.Property<string>("ConceptRangeUri")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropertyUri")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ConceptRangeUri", "PropertyUri");

                    b.HasIndex("PropertyUri");

                    b.ToTable("OntologyPropertyRange");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyConcept", b =>
                {
                    b.HasOne("Onto.DAL.Entities.OntologyConcept", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyPropertyDomain", b =>
                {
                    b.HasOne("Onto.DAL.Entities.OntologyConcept", "Concept")
                        .WithMany("DomainProperties")
                        .HasForeignKey("ConceptDomainUri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onto.DAL.Entities.OntologyProperty", "Property")
                        .WithMany("DomainConcepts")
                        .HasForeignKey("PropertyUri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concept");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyPropertyRange", b =>
                {
                    b.HasOne("Onto.DAL.Entities.OntologyConcept", "Concept")
                        .WithMany("RangeProperties")
                        .HasForeignKey("ConceptRangeUri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onto.DAL.Entities.OntologyProperty", "Property")
                        .WithMany("RangeConcepts")
                        .HasForeignKey("PropertyUri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concept");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyConcept", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("DomainProperties");

                    b.Navigation("RangeProperties");
                });

            modelBuilder.Entity("Onto.DAL.Entities.OntologyProperty", b =>
                {
                    b.Navigation("DomainConcepts");

                    b.Navigation("RangeConcepts");
                });
#pragma warning restore 612, 618
        }
    }
}
